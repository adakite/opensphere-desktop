package io.opensphere.mantle.data.element.mdfilter;

import java.math.BigInteger;

import com.vividsolutions.jts.geom.Geometry;

import io.opensphere.core.datafilter.DataFilter;
import io.opensphere.core.model.time.TimeSpan;
import io.opensphere.core.util.lang.Pair;

/**
 * Class for aggregating the information required for creating an OGC filter.
 */
public class OGCFilterParameters
{
    /** The tag name to use to identify the region geometry. */
    private String myGeometryTagName;

    /** Flag determining whether points are lat/lon or lon/lat. */
    private boolean myLatBeforeLon;

    /** The maximum number of features to be returned by the query. */
    private BigInteger myMaxFeatures;

    /** The output format to be returned by the query. */
    private String myOutputFormat;

    /** The region over which data is desired. */
    private Geometry myRegion;

    /** The Spatial Reference System (SRS) string to use for this request. */
    private String mySrs;

    /** The names of the fields associated with the time span of the query. */
    private Pair<String, String> myTimeFieldNames;

    /** The time span. */
    private TimeSpan myTimeSpan;

    /** Flag indicating if GML MultiSurfaces should be used. */
    private boolean myUseMultisurfaces;

    /** An additional data filter generated by a user. */
    private DataFilter myUserFilter;

    /**
     * Get the geometryTagName.
     *
     * @return the geometryTagName
     */
    public String getGeometryTagName()
    {
        return myGeometryTagName;
    }

    /**
     * Get the maxFeatures.
     *
     * @return the maxFeatures
     */
    public BigInteger getMaxFeatures()
    {
        return myMaxFeatures;
    }

    /**
     * Get the outputFormat.
     *
     * @return the outputFormat
     */
    public String getOutputFormat()
    {
        return myOutputFormat;
    }

    /**
     * Get the region.
     *
     * @return the region
     */
    public Geometry getRegion()
    {
        return myRegion;
    }

    /**
     * Get the srs.
     *
     * @return the srs
     */
    public String getSrs()
    {
        return mySrs;
    }

    /**
     * Get the timeFieldNames.
     *
     * @return the timeFieldNames
     */
    public Pair<String, String> getTimeFieldNames()
    {
        return myTimeFieldNames;
    }

    /**
     * Get the timeSpan.
     *
     * @return the timeSpan
     */
    public TimeSpan getTimeSpan()
    {
        return myTimeSpan;
    }

    /**
     * Get the userFilter.
     *
     * @return the userFilter
     */
    public DataFilter getUserFilter()
    {
        return myUserFilter;
    }

    /**
     * Get the latBeforeLon.
     *
     * @return the latBeforeLon
     */
    public boolean isLatBeforeLon()
    {
        return myLatBeforeLon;
    }

    /**
     * Get the useMultisurfaces.
     *
     * @return the useMultisurfaces
     */
    public boolean isUseMultisurfaces()
    {
        return myUseMultisurfaces;
    }

    /**
     * Set the geometryTagName.
     *
     * @param geometryTagName the geometryTagName to set
     */
    public void setGeometryTagName(String geometryTagName)
    {
        myGeometryTagName = geometryTagName;
    }

    /**
     * Set the latBeforeLon.
     *
     * @param latBeforeLon the latBeforeLon to set
     */
    public void setLatBeforeLon(boolean latBeforeLon)
    {
        myLatBeforeLon = latBeforeLon;
    }

    /**
     * Set the maxFeatures.
     *
     * @param maxFeatures the maxFeatures to set
     */
    public void setMaxFeatures(BigInteger maxFeatures)
    {
        myMaxFeatures = maxFeatures;
    }

    /**
     * Set the outputFormat.
     *
     * @param outputFormat the outputFormat to set
     */
    public void setOutputFormat(String outputFormat)
    {
        myOutputFormat = outputFormat;
    }

    /**
     * Set the region.
     *
     * @param region the region to set
     */
    public void setRegion(Geometry region)
    {
        myRegion = region;
    }

    /**
     * Set the srs.
     *
     * @param srs the srs to set
     */
    public void setSrs(String srs)
    {
        mySrs = srs;
    }

    /**
     * Set the timeFieldNames.
     *
     * @param timeFieldNames the timeFieldNames to set
     */
    public void setTimeFieldNames(Pair<String, String> timeFieldNames)
    {
        myTimeFieldNames = timeFieldNames;
    }

    /**
     * Set the timeSpan.
     *
     * @param timeSpan the timeSpan to set
     */
    public void setTimeSpan(TimeSpan timeSpan)
    {
        myTimeSpan = timeSpan;
    }

    /**
     * Set the useMultisurfaces.
     *
     * @param useMultisurfaces the useMultisurfaces to set
     */
    public void setUseMultisurfaces(boolean useMultisurfaces)
    {
        myUseMultisurfaces = useMultisurfaces;
    }

    /**
     * Set the userFilter.
     *
     * @param userFilter the userFilter to set
     */
    public void setUserFilter(DataFilter userFilter)
    {
        myUserFilter = userFilter;
    }
}
